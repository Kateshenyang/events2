{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://events2/./src/js/startgame.js","webpack://events2/./src/js/field.js","webpack://events2/./src/js/goblin.js","webpack://events2/./src/js/game.js"],"sourcesContent":["import Field from './field.js';\nimport Goblin from './goblin.js';\nimport Game from './game.js';\n\nconst field = new Field();\nconst goblin = new Goblin();\nconst game = new Game(field, goblin);\n\nconst startButton = document.getElementById('startButton');\nstartButton.addEventListener('click', () => {\n    game.start();\n    updateScore(game);\n});\n\nfunction updateScore(game) {\n    const scoreElement = document.getElementById('score');\n    setInterval(() => {\n        scoreElement.textContent = `Score: ${game.score}`;\n    }, 100);\n}","export default class Field {\n    constructor() {\n        this.fieldSize = 4\n    }\n\n    drawField() {\n        const field = document.createElement('div');\n        field.classList.add('field');\n        for (let i = 0; i < this.fieldSize * 4; i++) {\n          const cell = document.createElement('div');\n          cell.classList.add('cell');\n          field.appendChild(cell);\n        }\n        this.field = field;\n        return this.field;\n      }\n    \n      getField() {\n        this.drawField();\n        return this.field;\n      }\n    }","export default class Goblin {\n    constructor () {\n        this.goblin = null;\n\n    }\n\n    createGoblin () {\n        const goblin = document.createElement('div')\n        goblin.classList.add('goblin')\n        this.goblin = goblin\n    }\n\n    getGoblin() {\n        this.createGoblin()\n        return this.goblin\n    }\n}","export default class Game {\n    constructor(field, goblin) {\n        this.field = field;\n        this.fieldSize = 4;\n        this.goblin = goblin;\n        this.activeGoblin = null;\n        this.position = null;\n        this.score = 0;\n        this.missed = 0;\n        this.maxMissed = 5;\n        this.intervalId = null;\n    }\n\n    newField() {\n        const field = this.field.getField(this.fieldSize);\n        const body = document.querySelector('body');\n        let container = document.querySelector('.container');\n        if (container) {\n            container.remove();\n        }\n\n        container = document.createElement('div');\n        container.classList.add('container');\n        container.append(field);\n        body.prepend(container);\n        this.cells = [...field.children];\n        this.cells.forEach(cell => cell.addEventListener('click', this.handleCellClick.bind(this)));\n    }\n\n    handleCellClick(event) {\n        const cell = event.currentTarget;\n        if (cell.contains(this.activeGoblin)) {\n            this.score++;\n            this.activeGoblin.remove();\n            this.activeGoblin = null;\n        } else {\n            this.missed++;\n        }\n        this.checkGameOver();\n    }\n\n    randomPosition() {\n        const position = Math.floor(Math.random() * this.fieldSize * 4);\n        if (position === this.position) {\n            this.randomPosition();\n            return;\n        }\n        this.deleteGoblin();\n        this.position = position;\n        this.adventGoblin();\n    }\n\n    deleteGoblin() {\n        if (this.activeGoblin === null) {\n            return;\n        }\n        this.cells[this.position].firstChild.remove();\n        this.activeGoblin = null;\n    }\n\n    adventGoblin() {\n        this.activeGoblin = this.goblin.getGoblin();\n        this.cells[this.position].append(this.activeGoblin);\n    }\n\n    checkGameOver() {\n        if (this.missed >= this.maxMissed) {\n            this.stop();\n            alert(`Game Over! Your score is ${this.score}`);\n        }\n    }\n\n    play() {\n        const gameLoop = () => {\n            this.randomPosition();\n        };\n\n        this.intervalId = setInterval(gameLoop.bind(this), 1000);\n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n    }\n\n    start() {\n        this.score = 0;\n        this.missed = 0;\n        this.newField();\n        this.play();\n    }\n}"],"names":["field","constructor","this","fieldSize","drawField","document","createElement","classList","add","i","cell","appendChild","getField","goblin","createGoblin","getGoblin","game","activeGoblin","position","score","missed","maxMissed","intervalId","newField","body","querySelector","container","remove","append","prepend","cells","children","forEach","addEventListener","handleCellClick","bind","event","currentTarget","contains","checkGameOver","randomPosition","Math","floor","random","deleteGoblin","adventGoblin","firstChild","stop","alert","play","setInterval","gameLoop","clearInterval","start","getElementById","scoreElement","textContent","updateScore"],"sourceRoot":""}